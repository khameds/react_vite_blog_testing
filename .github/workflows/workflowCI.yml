# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Workflow CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    #Define environnement variables
    env:
      APP_PORT: ${{ secrets.APP_PORT }}
      APP_HOST: ${{ secrets.APP_HOST }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: root
      DB_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      SECRET_KEY_JWT: ${{ secrets.SECRET_KEY_JWT }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      FRONTEND_URL_BACKOFFICE: ${{ secrets.FRONTEND_URL_BACKOFFICE }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - ${{ secrets.DB_PORT }}:${{ secrets.DB_PORT }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v4
      with:
        node-version: 'node'      
    
    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h "127.0.0.1" --silent; do
          echo 'waiting for mysql...'
          sleep 5
        done

    - name: Run database migrations
      run: |
        mysql -h ${{ secrets.DB_HOST }} -u root -p ${{ secrets.DB_ROOT_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
        "use ${{ secrets.DB_NAME }}";
        # Add more SQL commands here to set up your database schema  

          
    - run: npm run setup --if-present
    - run: npm run db:migrate --if-present
    - run: npm run db:seed --if-present
    - run: npm run dev --if-present
    - run: npm run test --if-present
    - run: npm run test --if-present
